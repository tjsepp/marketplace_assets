openapi: 3.0.0
info:
  title: Marketplace Listing API
  description:
    "The Marketplace Listing API allows you to manage the listings with CRUD operations. It's hosted as part of the [Databricks Workspace API](https://docs.databricks.com/dev-tools/api/latest/workspace.html). Supported authentication mechanisms are: 
    
    * [Personal Access Token Authentication](https://docs.databricks.com/dev-tools/api/latest/authentication.html) on AWS (https://accounts.cloud.databricks.com)

    * Disclaimer: The APIs here are not offically maintained and might change without notice. 
     "
  version: '1.0'

paths:
  /api/2.0/marketplace-provider/listings:
    post:
      tags:
        - Listing
      summary: Add a listing
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateListing'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Listing'
        '400':
          description: Invalid params supplied
        '500':
          description: Internal server error
    get:
      tags:
        - Listing
      summary: Get all listings in the account
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Listing'
        '500':
          description: Internal server error

  /api/2.0/marketplace-provider/listings/{listing_id}:
    parameters:
      - name: listing_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
    get:
      tags:
        - Listing
      summary: Get an existing listing
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Listing'
        '404':
          description: Specified object not found
        '500':
          description: Internal server error
    put:
      tags:
        - Listing
      summary: Update an existing listing
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateListing'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Listing'
        '400':
          description: Invalid params supplied
        '404':
          description: Specified object not found
        '500':
          description: Internal server error
    delete:
      tags:
        - Listing
      summary: Delete an existing listing
      responses:
        '200':
          description: Successful operation
        '404':
          description: Specified object not found
        '409':
          description: Aborted due to conflict
        '500':
          description: Internal server error

components:
  schemas:
    Listing:
      type: object
      required:
        - summary
      properties:
        id:
          type: string
          format: uuid
          example: 2a5b461b-5ec2-4de3-8e8f-f390bd7caf75
        summary:
          $ref: '#/components/schemas/ListingSummary'
        detail:
          $ref: '#/components/schemas/ListingDetail'
    CreateListing:
      type: object
      properties:
        listing:
          $ref: '#/components/schemas/Listing'
    UpdateListing:
      type: object
      properties:
        id:
          type: string
        listing:
          $ref: '#/components/schemas/Listing'
    ListingSummary:
      type: object
      required:
        - name
        - listingType
      properties:
        name:
          type: string
        listingType:
          type: string
          enum:
            - standard
            - personalized
        subtitle:
          type: string
        status:
          type: string
          enum:
            - draft
            - pending
            - published
            - suspended
        provider_id:
          type: string
        share:
          $ref: '#/components/schemas/ShareInfo'
        provider_region:
          $ref: '#/components/schemas/RegionInfo'
        categories:
          type: array
          items:
            type: string
            enum:
              - ADVERTISING_AND_MARKETING
              - CLIMATE_AND_ENVIRONMENT
              - COMMERCE
              - DEMOGRAPHICS
              - ECONOMICS
              - EDUCATION
              - ENERGY
              - FINANCIAL
              - GAMING
              - GEOSPATIAL
              - HEALTH
              - MEDIA
              - OTHER
              - PUBLIC_SECTOR
              - RETAIL
              - SECURITY
              - SCIENCE_AND_RESEARCH
              - SPORTS
              - TRANSPORTATION_AND_LOGISTICS
              - TRAVEL_AND_TOURISM
        created_at:
          type: integer
        created_by:
          type: string
        created_by_id:
          type: integer
        updated_at:
          type: integer
        updated_by:
          type: string
        updated_by_id:
          type: integer
        published_at:
          type: integer
        published_by:
          type: string
    ListingDetail:
      type: object
      properties:
        description:
          type: string
        terms_of_service:
          type: string
        documentation_link:
          type: string
        privacy_policy_link:
          type: string
        support_link:
          type: string
        contact_email:
          type: string
        file_id:
          type: array
          items:
            type: string
    ShareInfo:
      type: object
      required:
        - name
        - type
      properties:
        name:
          type: string
        type:
          type: string
          enum:
            - sample
            - full
        metastore_id:
          type: string
          format: uuid
          example: 5f8b08cf-79e4-4927-a66a-15aef64a4627
    RegionInfo:
      type: object
      properties:
        cloud:
          type: string
          example: aws
        region:
          type: string
          example: us-west-2

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearerAuth
security:
  - bearerAuth: []